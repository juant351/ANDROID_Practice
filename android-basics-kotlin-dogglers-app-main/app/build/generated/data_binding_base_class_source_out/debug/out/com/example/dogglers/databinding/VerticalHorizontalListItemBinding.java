// Generated by view binder compiler. Do not edit!
package com.example.dogglers.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dogglers.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VerticalHorizontalListItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView itemImageVerticalHorizontal;

  @NonNull
  public final TextView itemTextAge;

  @NonNull
  public final TextView itemTextHobbies;

  @NonNull
  public final TextView itemTextName;

  private VerticalHorizontalListItemBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView itemImageVerticalHorizontal, @NonNull TextView itemTextAge,
      @NonNull TextView itemTextHobbies, @NonNull TextView itemTextName) {
    this.rootView = rootView;
    this.itemImageVerticalHorizontal = itemImageVerticalHorizontal;
    this.itemTextAge = itemTextAge;
    this.itemTextHobbies = itemTextHobbies;
    this.itemTextName = itemTextName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static VerticalHorizontalListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VerticalHorizontalListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.vertical_horizontal_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VerticalHorizontalListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_image_vertical_horizontal;
      ImageView itemImageVerticalHorizontal = ViewBindings.findChildViewById(rootView, id);
      if (itemImageVerticalHorizontal == null) {
        break missingId;
      }

      id = R.id.item_text_age;
      TextView itemTextAge = ViewBindings.findChildViewById(rootView, id);
      if (itemTextAge == null) {
        break missingId;
      }

      id = R.id.item_text_hobbies;
      TextView itemTextHobbies = ViewBindings.findChildViewById(rootView, id);
      if (itemTextHobbies == null) {
        break missingId;
      }

      id = R.id.item_text_name;
      TextView itemTextName = ViewBindings.findChildViewById(rootView, id);
      if (itemTextName == null) {
        break missingId;
      }

      return new VerticalHorizontalListItemBinding((MaterialCardView) rootView,
          itemImageVerticalHorizontal, itemTextAge, itemTextHobbies, itemTextName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
